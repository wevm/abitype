{
  "name": "abitype",
  "description": "Strict TypeScript types for Ethereum ABIs",
  "version": "0.9.9",
  "license": "MIT",
  "repository": "wagmi-dev/abitype",
  "scripts": {
    "bench": "vitest bench",
    "build": "pnpm run clean && pnpm run build:cjs && pnpm run build:esm && pnpm run build:types",
    "build:cjs": "tsc --project tsconfig.build.json --module commonjs --moduleResolution node10 --outDir ./dist/cjs --removeComments --verbatimModuleSyntax false && echo > ./dist/cjs/package.json '{\"type\":\"commonjs\"}'",
    "build:esm": "tsc --project tsconfig.build.json --module es2015 --moduleResolution node10 --outDir ./dist/esm --removeComments && echo > ./dist/esm/package.json '{\"type\":\"module\",\"sideEffects\":false}'",
    "build:types": "tsc --project tsconfig.build.json --declarationDir ./dist/types --emitDeclarationOnly --declaration --declarationMap",
    "changeset:release": "pnpm build && changeset publish",
    "changeset:version": "changeset version && pnpm install --lockfile-only && pnpm version:update",
    "clean": "rimraf dist *.tsbuildinfo",
    "docs:dev": "pnpm -r --filter docs dev",
    "format": "biome format . --write",
    "lint": "biome check .",
    "lint:fix": "pnpm lint --apply",
    "preinstall": "npx only-allow@1.1.1 pnpm",
    "prepare": "npx simple-git-hooks",
    "prepublishOnly": "bun .scripts/formatPackageJson.ts",
    "test": "vitest",
    "test:cov": "vitest run --coverage",
    "test:typecheck": "vitest typecheck",
    "test:update": "vitest --update",
    "trace": "tsc --noEmit --generateTrace ./trace --incremental false --project playground/tsconfig.json",
    "typecheck": "tsc --noEmit",
    "typecheck:propertyTypes": "tsc --noEmit --exactOptionalPropertyTypes false",
    "version:update": "bun .scripts/updateVersion.ts"
  },
  "files": [
    "dist",
    "!dist/**/*.tsbuildinfo",
    "src/**/*.ts",
    "!src/**/*.test.ts",
    "!src/**/*.test-d.ts",
    "!src/**/*.bench.ts"
  ],
  "sideEffects": false,
  "type": "module",
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "types": "./dist/types/index.d.ts",
  "typings": "./dist/types/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js"
    },
    "./config": {
      "types": "./dist/types/config.d.ts",
      "import": "./dist/esm/config.js",
      "require": "./dist/cjs/config.js"
    },
    "./test": {
      "types": "./dist/types/test.d.ts",
      "import": "./dist/esm/test.js",
      "require": "./dist/cjs/test.js"
    },
    "./zod": {
      "types": "./dist/types/zod.d.ts",
      "import": "./dist/esm/zod.js",
      "require": "./dist/cjs/zod.js"
    },
    "./package.json": "./package.json"
  },
  "typesVersions": {
    "*": {
      "config": ["./dist/types/config.d.ts"],
      "test": ["./dist/types/test.d.ts"],
      "zod": ["./dist/types/zod.d.ts"]
    }
  },
  "peerDependencies": {
    "typescript": ">=5.0.4",
    "zod": "^3 >=3.19.1"
  },
  "peerDependenciesMeta": {
    "typescript": {
      "optional": true
    },
    "zod": {
      "optional": true
    }
  },
  "devDependencies": {
    "@biomejs/biome": "1.1.2",
    "@changesets/changelog-github": "^0.4.8",
    "@changesets/cli": "^2.26.0",
    "@ethersproject/abi": "^5.7.0",
    "@vitest/coverage-c8": "^0.30.1",
    "bun": "1.0.1",
    "bun-types": "^1.0.3",
    "ethers": "^6.5.1",
    "rimraf": "^5.0.1",
    "simple-git-hooks": "^2.8.1",
    "typescript": "5.0.4",
    "typescript@5.1.3": "npm:typescript@5.1.3",
    "typescript@5.2.2": "npm:typescript@5.2.2",
    "vitest": "^0.30.1",
    "zod": "^3.20.6"
  },
  "contributors": ["awkweb.eth <t@wagmi.sh>", "jxom.eth <j@wagmi.sh>"],
  "funding": "https://github.com/sponsors/wagmi-dev",
  "keywords": ["abi", "eth", "ethereum", "typescript", "web3"],
  "simple-git-hooks": {
    "pre-commit": "pnpm format && pnpm lint:fix"
  },
  "packageManager": "pnpm@8.8.0",
  "pnpm": {
    "overrides": {
      "remark-shiki-twoslash>shiki": "^0.14.1",
      "shiki-twoslash>shiki": "^0.14.1"
    },
    "peerDependencyRules": {
      "ignoreMissing": ["@algolia/client-search"]
    }
  }
}
